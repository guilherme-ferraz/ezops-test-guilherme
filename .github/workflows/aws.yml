name: Deploy EC2
on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      # Step 1
      - uses: actions/checkout@v2
      #step 2
      - name: npm install
        id: deploy
        shell: bash
        run: npm install
      #step 3
      - name: npm test
        shell: bash
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          npm test && echo "$(grep -Po 'failed' test.log)" > result.log
        continue-on-error: true
      #step 4
      - name: Check
        shell: bash
        run: | 
          sleep 20
          FILE=test.log
          if [[ -f "$FILE" ]]; then
            echo "arquivo existe"
            grep -Po 'failed' $FILE > result.log
            echo "ola mundo"
            echo "result: $(cat result.log)"
            if [[ -z "$result" ]]; then 
                echo "OK"
            else
                echo "FAIL"
                exit 1
            fi 
          else 
            echo "arquivo nao existe"
            exit 0
          fi
  CD:
    needs: [CI]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deployment
        id: deploy
        shell: bash
        env:
          parentPath: '/home/ubuntu/'
          app: 'ezops-test-guilherme'
          fullPath: '/home/ubuntu/ezops-test-guilherme/'
          script: '/home/ubuntu/ezops-test-guilherme/scripts/rollingUpdate.sh'
          environment: '/home/ubuntu/environments/.env.ezops.production'
          gitProject: git@github.com:guilherme-ferraz/ezops-test-guilherme.git
        run: |
          echo "${{ secrets.AWS_SSH_PEM }}" > cert.pem && \
          chmod 400 cert.pem && \
          mkdir -p ~/.ssh/ && \
          chmod 700 ~/.ssh/ && \
          ssh-keyscan -H "${{ secrets.AWS_HOST }}" >> ~/.ssh/known_hosts && \
          ssh -i 'cert.pem' ubuntu@${{ secrets.AWS_HOST }} \
          "if [ -d "${{ env.fullPath }}" ]; then
          cd ${{ env.fullPath }} && \
          git stash && \
          git pull && \
          chmod +x ${{ env.script }} && \
          ${{ env.script }} path=${{ env.fullPath }} env=${{ env.environment }};
          else 
          cd ${{ env.parentPath }} && \
          git clone ${{ env.gitProject }} && \
          chmod +x ${{ env.script }} && \
          ${{ env.script }} path=${{ env.fullPath }} env=${{ env.environment }}; fi"
